═══════════════════════════════════════════════════════════════
        НАСТРОЙКА iOS И ANDROID ДЛЯ РАЗРАБОТКИ
═══════════════════════════════════════════════════════════════

Для полноценной работы с приложением на iOS и Android необходимо 
выполнить следующие шаги:

═══════════════════════════════════════════════════════════════
📱 НАСТРОЙКА iOS (ТРЕБУЕТСЯ Mac)
═══════════════════════════════════════════════════════════════

1. УСТАНОВКА XCODE
   ────────────────
   
   Вариант 1: Через App Store
   • Откройте App Store
   • Найдите "Xcode"
   • Нажмите "Установить" или "Загрузить"
   • Дождитесь завершения установки (может занять 1-2 часа)
   
   Вариант 2: С сайта Apple
   • Перейдите на https://developer.apple.com/xcode/
   • Скачайте последнюю версию Xcode
   • Установите приложение

2. НАСТРОЙКА XCODE
   ────────────────
   
   После установки выполните в терминале:
   
   sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer
   sudo xcodebuild -runFirstLaunch
   
   Введите пароль администратора при запросе.

3. УСТАНОВКА COCOAPODS (если еще не установлен)
   ──────────────────────────────────────────────
   
   sudo gem install cocoapods
   
   После установки выполните в папке ios/:
   
   cd wb_analytics_app/ios
   pod install

4. ЗАПУСК НА СИМУЛЯТОРЕ iOS
   ─────────────────────────
   
   # Посмотреть список доступных симуляторов
   flutter emulators
   
   # Запустить симулятор
   open -a Simulator
   
   # Запустить приложение
   flutter run

5. ЗАПУСК НА РЕАЛЬНОМ УСТРОЙСТВЕ iOS
   ──────────────────────────────────
   
   • Подключите iPhone к Mac через USB
   • Откройте Xcode и создайте Apple ID (если нет)
   • В Xcode: Preferences → Accounts → добавьте Apple ID
   • Откройте ios/Runner.xcworkspace в Xcode
   • Выберите ваше устройство в списке устройств
   • В разделе "Signing & Capabilities" выберите ваш Team
   • Нажмите Run или выполните: flutter run

═══════════════════════════════════════════════════════════════
🤖 НАСТРОЙКА ANDROID
═══════════════════════════════════════════════════════════════

1. УСТАНОВКА ANDROID STUDIO
   ─────────────────────────
   
   • Перейдите на https://developer.android.com/studio
   • Скачайте Android Studio для macOS
   • Установите приложение
   • Запустите Android Studio

2. УСТАНОВКА ANDROID SDK
   ──────────────────────
   
   При первом запуске Android Studio:
   • Следуйте мастеру настройки
   • Выберите "Custom" установку
   • Установите:
     - Android SDK
     - Android SDK Platform
     - Android Virtual Device (AVD)
   
   Или вручную:
   • Android Studio → Settings (Cmd + ,)
   • Appearance & Behavior → System Settings → Android SDK
   • Установите нужные версии SDK (минимум API 21)

3. ПРИНЯТИЕ ЛИЦЕНЗИЙ
   ──────────────────
   
   flutter doctor --android-licenses
   
   Нажимайте 'y' для принятия всех лицензий.

4. СОЗДАНИЕ ВИРТУАЛЬНОГО УСТРОЙСТВА (AVD)
   ───────────────────────────────────────
   
   • Android Studio → Tools → Device Manager
   • Нажмите "Create Device"
   • Выберите устройство (например, Pixel 5)
   • Выберите системный образ (например, Android 13)
   • Нажмите "Finish"

5. ЗАПУСК НА ЭМУЛЯТОРЕ ANDROID
   ───────────────────────────
   
   # Посмотреть список эмуляторов
   flutter emulators
   
   # Запустить эмулятор
   flutter emulators --launch <emulator_id>
   
   # Или запустите через Android Studio и выполните:
   flutter run

6. ЗАПУСК НА РЕАЛЬНОМ УСТРОЙСТВЕ ANDROID
   ──────────────────────────────────────
   
   На устройстве:
   • Откройте Настройки → О телефоне
   • Нажмите 7 раз на "Номер сборки"
   • Вернитесь в Настройки → Для разработчиков
   • Включите "Отладка по USB"
   
   На компьютере:
   • Подключите устройство через USB
   • Разрешите отладку на устройстве
   • Выполните: flutter devices
   • Выполните: flutter run

═══════════════════════════════════════════════════════════════
🧪 ТЕСТИРОВАНИЕ БЕЗ iOS/ANDROID
═══════════════════════════════════════════════════════════════

Пока вы настраиваете iOS и Android, можете протестировать приложение:

1. НА macOS (уже доступно)
   ──────────────────────
   flutter run -d macos

2. В CHROME (веб-версия)
   ──────────────────────
   flutter run -d chrome
   
   Примечание: некоторые функции могут работать иначе в веб-версии.

═══════════════════════════════════════════════════════════════
✅ ПРОВЕРКА ГОТОВНОСТИ
═══════════════════════════════════════════════════════════════

После настройки выполните:

flutter doctor -v

Все пункты должны быть отмечены ✓ (зеленая галочка).

Если есть предупреждения (!), прочитайте их и следуйте инструкциям.

═══════════════════════════════════════════════════════════════
🚀 БЫСТРЫЙ СТАРТ
═══════════════════════════════════════════════════════════════

После настройки iOS или Android:

1. Откройте терминал
2. Перейдите в папку проекта:
   cd "/Users/ilgiz/Documents/WB Analytics/wb_analytics_app"

3. Запустите симулятор/эмулятор
4. Выполните: flutter run

Приложение скомпилируется и запустится автоматически!

═══════════════════════════════════════════════════════════════
📊 СБОРКА РЕЛИЗНОЙ ВЕРСИИ
═══════════════════════════════════════════════════════════════

iOS (только на Mac):
────────────────────
flutter build ios --release
flutter build ipa

Файл будет в: build/ios/ipa/

Android:
────────
# APK файл
flutter build apk --release

Файл будет в: build/app/outputs/flutter-apk/app-release.apk

# App Bundle (для Google Play)
flutter build appbundle --release

Файл будет в: build/app/outputs/bundle/release/app-release.aab

═══════════════════════════════════════════════════════════════
🔍 ПОЛЕЗНЫЕ КОМАНДЫ
═══════════════════════════════════════════════════════════════

# Проверить состояние окружения
flutter doctor -v

# Посмотреть подключенные устройства
flutter devices

# Посмотреть доступные эмуляторы
flutter emulators

# Очистить сборку
flutter clean

# Обновить зависимости
flutter pub get

# Пересобрать сгенерированные файлы
flutter pub run build_runner build --delete-conflicting-outputs

# Запустить в режиме отладки
flutter run

# Запустить в режиме релиза
flutter run --release

# Запустить на конкретном устройстве
flutter run -d <device_id>

# Горячая перезагрузка (когда приложение запущено)
Нажмите 'r' в терминале

# Полная перезагрузка (когда приложение запущено)
Нажмите 'R' в терминале

# Остановить приложение
Нажмите 'q' в терминале

═══════════════════════════════════════════════════════════════
❓ ЧАСТЫЕ ПРОБЛЕМЫ И РЕШЕНИЯ
═══════════════════════════════════════════════════════════════

ПРОБЛЕМА: "Unable to locate Android SDK"
РЕШЕНИЕ: Установите Android Studio и настройте Android SDK

ПРОБЛЕМА: "Xcode installation is incomplete"
РЕШЕНИЕ: Установите Xcode из App Store и выполните:
         sudo xcodebuild -runFirstLaunch

ПРОБЛЕМА: "CocoaPods not installed"
РЕШЕНИЕ: sudo gem install cocoapods

ПРОБЛЕМА: Ошибки при запуске на iOS
РЕШЕНИЕ: cd ios && pod install && cd ..

ПРОБЛЕМА: Ошибки при сборке Android
РЕШЕНИЕ: flutter clean && flutter pub get

ПРОБЛЕМА: "No devices found"
РЕШЕНИЕ: Запустите симулятор/эмулятор или подключите реальное устройство

═══════════════════════════════════════════════════════════════
📚 ПОЛЕЗНЫЕ РЕСУРСЫ
═══════════════════════════════════════════════════════════════

• Flutter Documentation: https://docs.flutter.dev/
• Flutter iOS Setup: https://docs.flutter.dev/get-started/install/macos#ios-setup
• Flutter Android Setup: https://docs.flutter.dev/get-started/install/macos#android-setup
• Xcode: https://developer.apple.com/xcode/
• Android Studio: https://developer.android.com/studio

═══════════════════════════════════════════════════════════════

              Удачи в разработке! 🚀

═══════════════════════════════════════════════════════════════

