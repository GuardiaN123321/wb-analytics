╔═══════════════════════════════════════════════════════════════╗
║   ПОШАГОВОЕ ИСПРАВЛЕНИЕ ОШИБКИ PhaseScriptExecution          ║
╚═══════════════════════════════════════════════════════════════╝

Следуйте этим шагам СТРОГО ПО ПОРЯДКУ:

═══════════════════════════════════════════════════════════════
ШАГ 1: ЗАКРОЙТЕ XCODE
═══════════════════════════════════════════════════════════════

1. Полностью закройте Xcode (Cmd+Q)
2. Убедитесь, что Xcode не запущен

═══════════════════════════════════════════════════════════════
ШАГ 2: ОТКРОЙТЕ ТЕРМИНАЛ И ВЫПОЛНИТЕ
═══════════════════════════════════════════════════════════════

Скопируйте и вставьте ЭТИ команды в Терминал:

cd "/Users/ilgiz/Documents/Аналитика Маркетплейсов/wb_analytics_app"
flutter clean
rm -rf ios/Pods ios/Podfile.lock ios/.symlinks
flutter pub get
cd ios
pod install
cd ..

═══════════════════════════════════════════════════════════════
ШАГ 3: ОТКРОЙТЕ ПРОЕКТ В XCODE
═══════════════════════════════════════════════════════════════

В Терминале выполните:

open ios/Runner.xcworkspace

⚠️ ВАЖНО: Открывайте именно Runner.xcworkspace, НЕ Runner.xcodeproj!

═══════════════════════════════════════════════════════════════
ШАГ 4: НАСТРОЙТЕ BUILD SETTINGS
═══════════════════════════════════════════════════════════════

В Xcode:

1. В левой панели выберите "Runner" (синяя иконка проекта)

2. В центральной панели выберите target "Runner"

3. Перейдите на вкладку "Build Settings"

4. В строке поиска введите: "deployment"

5. Найдите "iOS Deployment Target" и установите: 12.0

6. В строке поиска введите: "bitcode"

7. Найдите "Enable Bitcode" и установите: No

═══════════════════════════════════════════════════════════════
ШАГ 5: ИСПРАВЬТЕ SCRIPT PHASES
═══════════════════════════════════════════════════════════════

1. Перейдите на вкладку "Build Phases"

2. Раскройте секцию "Run Script" (их может быть несколько)

3. Для каждого "Run Script" который начинается с:
   /bin/sh "$FLUTTER_ROOT/packages/flutter_tools/bin/xcode_backend.sh"
   
   Измените ПЕРВУЮ строку на:
   /bin/bash "$FLUTTER_ROOT/packages/flutter_tools/bin/xcode_backend.sh"
   
   (замените /bin/sh на /bin/bash)

4. Для скрипта "Thin Binary":
   
   Найдите строку с /bin/sh и замените на /bin/bash

═══════════════════════════════════════════════════════════════
ШАГ 6: ОЧИСТИТЕ СБОРКУ
═══════════════════════════════════════════════════════════════

В Xcode:

1. Меню: Product → Clean Build Folder (или Cmd+Shift+K)

2. Дождитесь завершения очистки

═══════════════════════════════════════════════════════════════
ШАГ 7: НАСТРОЙТЕ SIGNING (если требуется)
═══════════════════════════════════════════════════════════════

1. Выберите target "Runner"

2. Перейдите на вкладку "Signing & Capabilities"

3. Убедитесь что:
   ☑ Automatically manage signing - включено
   Team - выбран ваш Apple ID

4. Если нет Apple ID:
   - Xcode → Preferences (Cmd+,)
   - Вкладка "Accounts"
   - Нажмите "+" и добавьте Apple ID

═══════════════════════════════════════════════════════════════
ШАГ 8: ЗАПУСТИТЕ ПРОЕКТ
═══════════════════════════════════════════════════════════════

1. В верхней панели Xcode выберите симулятор
   (например: iPhone 15 Pro)

2. Нажмите кнопку Run (▶) или нажмите Cmd+R

3. Дождитесь сборки

═══════════════════════════════════════════════════════════════
ЕСЛИ ОШИБКА ВСЁ ЕЩЁ ЕСТЬ: АЛЬТЕРНАТИВНЫЙ СПОСОБ
═══════════════════════════════════════════════════════════════

Используйте Flutter CLI вместо Xcode:

1. Откройте Терминал

2. Выполните:
   cd "/Users/ilgiz/Documents/Аналитика Маркетплейсов/wb_analytics_app"
   open -a Simulator
   
3. Дождитесь запуска симулятора

4. Выполните:
   flutter run
   
5. Приложение соберется и запустится автоматически!

═══════════════════════════════════════════════════════════════
ПРОВЕРКА ПОСЛЕ ИСПРАВЛЕНИЯ
═══════════════════════════════════════════════════════════════

Если всё работает, вы увидите:
✅ Приложение Аналитика Маркетплейсов на симуляторе
✅ Главный экран со списком товаров
✅ Кнопка "+" для добавления товаров

═══════════════════════════════════════════════════════════════
ЧАСТЫЕ ОШИБКИ И ИХ РЕШЕНИЯ
═══════════════════════════════════════════════════════════════

ОШИБКА: "No such file or directory"
РЕШЕНИЕ: Убедитесь что открыли Runner.xcworkspace, не .xcodeproj

ОШИБКА: "Signing for Runner requires a development team"
РЕШЕНИЕ: Добавьте Apple ID в Xcode → Preferences → Accounts

ОШИБКА: "Command PhaseScriptExecution failed" всё ещё есть
РЕШЕНИЕ: Выполните в Терминале:
         defaults write com.apple.dt.Xcode IDEBuildOperationMaxNumberOfConcurrentCompileTasks 1

═══════════════════════════════════════════════════════════════
ФИНАЛЬНАЯ ПРОВЕРКА
═══════════════════════════════════════════════════════════════

Выполните в Терминале:

cd "/Users/ilgiz/Documents/Аналитика Маркетплейсов/wb_analytics_app"
flutter doctor

Для iOS должна быть зелёная галочка ✓

═══════════════════════════════════════════════════════════════

                    УДАЧИ! 🚀

═══════════════════════════════════════════════════════════════

